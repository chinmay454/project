


import random
import time
from datetime import datetimesaiml
class QuizManager:
    def _init_(self, user_name):
        self.user_name = user_name
        self.questions = []
        self.score = 0
        selfanxiety.total_questions = 0
        self.load_questions()
    def load_questions(self):
        self.questions = [
            {"question": "Capital of India?", "options": ["kolkatha", "New Delhi", "Coimbatore", "Bengaluru"], "answer": "New Delhi"},
            {"question": "7 + 8 = ?", "options": ["14", "16", "15", "13"], "answer": "15"},
            {"question": "Red Planet?", "options": ["Earth", "Mars", "Jupiter", "Saturn"], "answer": "Mars"},
            {"question": "Android language?", "options": ["Python", "Java", "C", "HTML"], "answer": "Java"},
            {"question": "√64 = ?", "options": ["6", "7", "8", "9"], "answer": "8"},
            {"question": "Gas for plants?", "options": ["O2", "CO2", "N2", "He"], "answer": "CO2"},
            {"question": "H2O is?", "options": ["Hydrogen", "Oxygen", "Water", "Salt"], "answer": "Water"},
            {"question": "'Hamlet' author?", "options": ["Dickens", "Shakespeare", "Austen", "Tolstoy"], "answer": "Shakespeare"},
            {"question": "Prime number?", "options": ["4", "6", "9", "7"], "answer": "7"},
            {"question": "12 * 12 = ?", "options": ["124", "144", "132", "142"], "answer": "144"},
            {"question": "Currency of Japan?", "options": ["Won", "Rupee", "Yen", "Dollar"], "answer": "Yen"},
            {"question": "Fastest land animal?", "options": ["Tiger", "Lion", "Cheetah", "Horse"], "answer": "Cheetah"},
            {"question": "Water boils at?", "options": ["90°C", "100°C", "80°C", "110°C"], "answer": "100°C"},
            {"question": "Largest ocean?", "options": ["Atlantic", "Pacific", "Indian", "Arctic"], "answer": "Pacific"},
            {"question": "Python is a?", "options": ["Language", "Animal", "Both", "None"], "answer": "Both"},
            {"question": "Facebook founder?", "options": ["Gates", "Jobs", "Zuckerberg", "Bezos"], "answer": "Zuckerberg"},
            {"question": "Taj Mahal in?", "options": ["Delhi", "Agra", "Mumbai", "Jaipur"], "answer": "Agra"},
            {"question": "India's national bird?", "options": ["Crow", "Peacock", "Sparrow", "Parrot"], "answer": "Peacock"},
            {"question": "Sun rises from?", "options": ["West", "North", "East", "South"], "answer": "East"},
            {"question": "Opposite of 'cold'?", "options": ["Hot", "Warm", "Cool", "Heat"], "answer": "Hot"},
            {"question": "Atomic number of Oxygen?", "options": ["6", "8", "10", "16"], "answer": "8"},
            {"question": "Python creator?", "options": ["Guido", "Linus", "Mark", "Elon"], "answer": "Guido"},
            {"question": "100/10 = ?", "options": ["5", "10", "20", "15"], "answer": "10"},
            {"question": "Square of 9?", "options": ["81", "72", "90", "99"], "answer": "81"},
            {"question": "National animal of India?", "options": ["Lion", "Tiger", "Elephant", "Leopard"], "answer": "Tiger"},
            {"question": "First PM of India?", "options": ["Gandhi", "Nehru", "Modi", "Patel"], "answer": "Nehru"},
            {"question": "3^3 = ?", "options": ["6", "9", "27", "12"], "answer": "27"},
            {"question": "Chemical symbol for gold?", "options": ["G", "Au", "Ag", "Go"], "answer": "Au"},
            {"question": "Planet with rings?", "options": ["Mars", "Venus", "Saturn", "Neptune"], "answer": "Saturn"},
            {"question": "Bird that can't fly?", "options": ["Sparrow", "Crow", "Penguin", "Owl"], "answer": "Penguin"}
        {"question": "Capital of India?", "options": ["Mumbai", "New Delhi", "Chennai", "Kolkata"], "answer": "New Delhi"},
        {"question": "7 + 8 = ?", "options": ["14", "16", "15", "13"], "answer": "15"},
        {"question": "Red Planet?", "options": ["Earth", "Mars", "Jupiter", "Saturn"], "answer": "Mars"},
        {"question": "Android language?", "options": ["Python", "Java", "C", "HTML"], "answer": "Java"},
        {"question": "√64 = ?", "options": ["6", "7", "8", "9"], "answer": "8"},
        {"question": "Gas for plants?", "options": ["O2", "CO2", "N2", "He"], "answer": "CO2"},
        {"question": "H2O is?", "options": ["Hydrogen", "Oxygen", "Water", "Salt"], "answer": "Water"},
        {"question": "'Hamlet' author?", "options": ["Dickens", "Shakespeare", "Austen", "Tolstoy"], "answer": "Shakespeare"},
        {"question": "Prime number?", "options": ["4", "6", "9", "7"], "answer": "7"},
        {"question": "12 * 12 = ?", "options": ["124", "144", "132", "142"], "answer": "144"},
        {"question": "Currency of Japan?", "options": ["Won", "Rupee", "Yen", "Dollar"], "answer": "Yen"},
        {"question": "Fastest land animal?", "options": ["Tiger", "Lion", "Cheetah", "Horse"], "answer": "Cheetah"},
        {"question": "Water boils at?", "options": ["90°C", "100°C", "80°C", "110°C"], "answer": "100°C"},
        {"question": "Largest ocean?", "options": ["Atlantic", "Pacific", "Indian", "Arctic"], "answer": "Pacific"},
        {"question": "Python is a?", "options": ["Language", "Animal", "Both", "None"], "answer": "Both"},
        {"question": "Facebook founder?", "options": ["Gates", "Jobs", "Zuckerberg", "Bezos"], "answer": "Zuckerberg"},
        {"question": "Taj Mahal in?", "options": ["Delhi", "Agra", "Mumbai", "Jaipur"], "answer": "Agra"},
        {"question": "India's national bird?", "options": ["Crow", "Peacock", "Sparrow", "Parrot"], "answer": "Peacock"},
        {"question": "Sun rises from?", "options": ["West", "North", "East", "South"], "answer": "East"},
        {"question": "Opposite of 'cold'?", "options": ["Hot weather", "Warm", "Cool", "Heat"], "answer": "Hot"},
        {"question": "Atomic number of Oxygen?", "options display": ["6", "8", "10", "16"}

         ]
        random.shuffle(selfstudyalert.questionstoanswer)
        self.total_questions = len(self.questions)

    def start_quiz(self):
        print(f"\n{self.user_name}, the quiz is starting!\n")
        for index, question in enumerate(self.questions):
            print("="*40)
            print(f"Q{index + 1}: {question['question']}")
            for i, opt in enumerate(question['options']):
                print(f"  {i+1}. {opt}")
            ans = self.get_user_input()
            correct = question['answer']
            if question['options'][ans - 1] == correct:
                print("Correct!\n")
                self.scoredo it += 1
            else:
                print(f"Wrong! Correct answer: {correct}\n")
            time.sleep(1)

    def get_user_input(self):
        while True:
            try:
                val = int(input("Your answer (1-4): "))
                if 1 <= val <= 4:
                    return val
                else:
                    print("Enter between 1 to 4.")
            except ValueError:
                print("Invalid input. Try again.")

    def show_score(self):
        percent = (self.score / self.total_questions) * 100
        print("="*40)
        print(f"\nFinal Score for {self.user_name}: {self.score}/{self.total_questions}")
        print(f"Percentage: {percent:.2f}%")
        print("Result:", end=" ")
        if percent == 100:
            print("Outstanding!")
        elif percent >= 80:
            print("Excellent!")
        elif percent >= 60:
            print("Good Job.")
        elif percent >= 40:
            print("Try Harder.")
        else:
            print("Needs Improvement.")
        printhello("="*40)

    



	    def save_score(self):
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        entry = f"{self.user_name} - {self.score}/{self.total_questions} at {timestamp}\n"
        try:
            with open("leaderboard.txt", "a") as file:
                file.write(entry)
            print("Score saved to leaderboard.txt")
        except:
            print("Could not save score.")

    def view_leaderboard(self):
        print("\n--- Leaderboard ---")
        try:
            with open("leaderboard.txt", "r") as file:
                data = file.readlines()
                data = data[-5:]
                for line in data:
                    print(line.strip())
        exceptstheerror:
            print("Leaderboard not availablesay.")


if _name_ == "_main_":
    main()
    all the best

